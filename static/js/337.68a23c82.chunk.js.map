{"version":3,"file":"static/js/337.68a23c82.chunk.js","mappings":"kQAUaA,EAAaC,EAAAA,YACxB,WAA4DC,GAAS,IAAlEC,EAAiE,EAAjEA,QAAiE,IAAxDC,QAAAA,OAAwD,SAAvCC,EAAuC,EAAvCA,MAAOC,EAAgC,EAAhCA,OAAQC,EAAwB,EAAxBA,GAAOC,GAAiB,YAC9DC,GAAOC,EAAAA,EAAAA,IAAQH,GACfI,GAAcC,EAAAA,EAAAA,IAAoBL,EAAI,CAAEH,QAAAA,EAASC,MAAAA,EAAOC,OAAAA,IAE5D,OACE,SAAC,KAAD,kBACME,GADN,IAEEC,KAAMA,EACNN,QAAS,SAAAU,GACA,OAAPV,QAAO,IAAPA,GAAAA,EAAUU,GACLA,EAAMC,kBACTH,EAAYE,IAGhBX,IAAKA,EACLI,OAAQA,S,qGCxBHS,E,QAAUC,GAAAA,EAAH,2CACL,SAAAC,GAAC,OAAIA,EAAEC,MAAMC,UAAUC,K,6BCoBtC,EAjBwB,WACtB,OACE,SAACC,EAAA,EAAD,WACE,SAACC,EAAA,EAAD,CAAKC,QAAQ,OAAOC,eAAe,SAASC,GAAI,EAAhD,UACE,UAACH,EAAA,EAAD,YACE,SAACP,EAAD,gDACA,SAACO,EAAA,EAAD,CAAKC,QAAQ,OAAOC,eAAe,SAASE,GAAI,EAAhD,UACE,SAAC1B,EAAA,EAAD,CAAY2B,QAAQ,kBAAkBpB,GAAG,IAAzC,qC,yKCHNqB,EAAsB3B,EAAAA,YAAiB,WAQ1CC,GAAQ,IAPT2B,EAOS,EAPTA,GACAC,EAMS,EANTA,SACAH,EAKS,EALTA,QACAI,EAIS,EAJTA,KACAC,EAGS,EAHTA,OACAC,EAES,EAFTA,UACGzB,GACM,YACH0B,GAASC,EAAAA,EAAAA,IAAmBL,EAAU,OAC5C,GAEKM,EAAAA,EAAAA,KAAe,QAClBC,QAASR,GACNrB,IAJL,eAAO8B,EAAP,KAMMC,EANN,KACEF,QAMF,OAAoBG,EAAAA,EAAAA,KAAKD,GAAD,QAAC,kBAAgBD,GACpC9B,GADmB,IAEtBN,IAAKA,EACL+B,UAAWQ,GAAAA,CAAWR,EAAWC,EAAQF,GAAU,SAAUL,GAAW,GAAJ,OAAOO,EAAP,YAAiBP,GAAWI,GAAQ,GAAJ,OAAOG,EAAP,YAAiBH,GAAQvB,EAAMC,MAAQD,EAAMkC,UAAY,kBAGjKd,EAAOe,YAAc,SACrBf,EAAOgB,aA7Bc,CACnBjB,QAAS,UACTK,QAAQ,EACRU,UAAU,GA2BZ","sources":["components/ButtonLink.tsx","pages/Error/Error.styled.tsx","pages/Error/Error.tsx","../node_modules/react-bootstrap/esm/Button.js"],"sourcesContent":["import * as React from 'react';\nimport Button, { ButtonProps } from 'react-bootstrap/Button';\nimport { LinkProps, useHref, useLinkClickHandler } from 'react-router-dom';\n\ninterface ButtonLinkProps\n  extends ButtonProps,\n    Pick<LinkProps, 'replace' | 'state' | 'to'> {\n  children?: React.ReactNode;\n}\n\nexport const ButtonLink = React.forwardRef<HTMLButtonElement, ButtonLinkProps>(\n  ({ onClick, replace = false, state, target, to, ...props }, ref) => {\n    let href = useHref(to);\n    let handleClick = useLinkClickHandler(to, { replace, state, target });\n\n    return (\n      <Button\n        {...props}\n        href={href}\n        onClick={event => {\n          onClick?.(event);\n          if (!event.defaultPrevented) {\n            handleClick(event as any);\n          }\n        }}\n        ref={ref}\n        target={target}\n      />\n    );\n  }\n);\n","import styled from 'styled-components';\n\nexport const Message = styled.p`\n  font-size: ${p => p.theme.fontSizes.l};\n`;\n","import { Container } from 'react-bootstrap';\nimport { Box } from '../../components/Box';\nimport { Message } from './Error.styled';\nimport React from 'react';\nimport { ButtonLink } from '../../components/ButtonLink';\n\nconst Error: React.FC = () => {\n  return (\n    <Container>\n      <Box display=\"flex\" justifyContent=\"center\" py={6}>\n        <Box>\n          <Message>Sorry, we cannot find this page!</Message>\n          <Box display=\"flex\" justifyContent=\"center\" mt={5}>\n            <ButtonLink variant=\"outline-primary\" to=\"/\">\n              Back to home\n            </ButtonLink>\n          </Box>\n        </Box>\n      </Box>\n    </Container>\n  );\n};\n\nexport default Error;\n","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useButtonProps } from '@restart/ui/Button';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst defaultProps = {\n  variant: 'primary',\n  active: false,\n  disabled: false\n};\nconst Button = /*#__PURE__*/React.forwardRef(({\n  as,\n  bsPrefix,\n  variant,\n  size,\n  active,\n  className,\n  ...props\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'btn');\n  const [buttonProps, {\n    tagName\n  }] = useButtonProps({\n    tagName: as,\n    ...props\n  });\n  const Component = tagName;\n  return /*#__PURE__*/_jsx(Component, { ...buttonProps,\n    ...props,\n    ref: ref,\n    className: classNames(className, prefix, active && 'active', variant && `${prefix}-${variant}`, size && `${prefix}-${size}`, props.href && props.disabled && 'disabled')\n  });\n});\nButton.displayName = 'Button';\nButton.defaultProps = defaultProps;\nexport default Button;"],"names":["ButtonLink","React","ref","onClick","replace","state","target","to","props","href","useHref","handleClick","useLinkClickHandler","event","defaultPrevented","Message","styled","p","theme","fontSizes","l","Container","Box","display","justifyContent","py","mt","variant","Button","as","bsPrefix","size","active","className","prefix","useBootstrapPrefix","useButtonProps","tagName","buttonProps","Component","_jsx","classNames","disabled","displayName","defaultProps"],"sourceRoot":""}